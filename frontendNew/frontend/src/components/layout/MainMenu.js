import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Container, Navbar, Nav, NavDropdown } from 'react-bootstrap';
import { useNavigate } from 'react-router-dom';
var MainMenu = function (_a) {
    var checkAccess = _a.checkAccess;
    var navigate = useNavigate();
    var handleMenuClick = function (menuOption, formName) {
        var resp = checkAccess(menuOption);
        console.log('resp===', resp);
        //resp.then(isAllowed => {
        if (!resp) {
            alert('Access denied. Your Operator id has no access to this option');
            return;
        }
        console.log("Menu option ".concat(menuOption, " clicked"));
        console.log("Form name ".concat(formName, " selected"));
        // Navigate to the appropriate route
        navigate("/".concat(formName));
        //});
    };
    return (_jsx(Container, { fluid: true, className: "p-0", children: _jsxs(Navbar, { bg: "primary", variant: "dark", expand: "lg", children: [_jsx(Navbar.Brand, { children: "Main Menu" }), _jsx(Navbar.Toggle, { "aria-controls": "basic-navbar-nav" }), _jsx(Navbar.Collapse, { id: "basic-navbar-nav", children: _jsxs(Nav, { className: "me-auto justify-content-center w-100", children: [_jsxs(NavDropdown, { title: "BOP Setup", id: "basic-nav-dropdown", children: [_jsx(NavDropdown.Item, { onClick: function () { return handleMenuClick('ST', 'SetupBusiness'); }, children: "ST_Setup Business Client--1" }), _jsx(NavDropdown.Item, { onClick: function () { return handleMenuClick('UC', 'UpdateBusinessClient'); }, children: "UC_Update Existing Business Client--2" }), _jsx(NavDropdown.Item, { onClick: function () { return handleMenuClick('BY', 'ListOfBusinesses'); }, children: "BY_List of All Business Clients" }), _jsx(NavDropdown.Item, { onClick: function () { return handleMenuClick('SB', 'SetupBusinessType'); }, children: "SB_Setup Business Type" }), _jsx(NavDropdown.Item, { onClick: function () { return handleMenuClick('SE', 'SetupElectoralArea'); }, children: "SE_Setup Electoral Area/Zones" }), _jsx(NavDropdown.Item, { onClick: function () { return handleMenuClick('ZO', 'PropertyClass'); }, children: "SE_Setup Property Class" }), _jsx(NavDropdown.Item, { onClick: function () { return handleMenuClick('ZO', 'PropertyRate'); }, children: "ZO_Setup Container/Kiosk Fees" }), _jsx(NavDropdown.Item, { onClick: function () { return handleMenuClick('SG', 'SetupGradeRates'); }, children: "SG_Setup Grade Rates" }), _jsx(NavDropdown.Item, { onClick: function () { return handleMenuClick('GF', 'SetupGradeFees'); }, children: "GF_Setup Grade Fees - Fee Fixing Data Entry" }), _jsx(NavDropdown.Item, { onClick: function () { return handleMenuClick('EM', 'SetupOfficer'); }, children: "EM_Setup Collector" }), _jsx(NavDropdown.Item, { onClick: function () { return handleMenuClick('AE', 'AssignCollectorToElectoralArea'); }, children: "AE_Assign Collector To Electoral Area/Zone" }), _jsx(NavDropdown.Item, { onClick: function () { return handleMenuClick('DD', 'OperatorDefinition'); }, children: "DD_User Definition- Create a New User" }), _jsx(NavDropdown.Item, { onClick: function () { return handleMenuClick('VZ', 'OperatorPermission'); }, children: "VZ_User Permission- Give a New User Permissions to the System" }), _jsx(NavDropdown.Divider, {})] }), _jsxs(NavDropdown, { title: "BOP Finances", id: "basic-nav-dropdown", children: [_jsx(NavDropdown.Item, { onClick: function () { return handleMenuClick('OB', 'OfficerBudget'); }, children: "OB_Collector Budget- Setup Budget for a Collector" }), _jsx(NavDropdown.Item, { onClick: function () { return handleMenuClick('CP', 'CollectorPayment'); }, children: "CP_Collector Payment- Collector pays on behalf of a Client--4" }), _jsx(NavDropdown.Item, { onClick: function () { return handleMenuClick('PB', 'ProcessClientNewBalances'); }, children: "PB_Bill All Businesses for the CURRENT Fiscal Year--3" }), _jsx(NavDropdown.Item, { onClick: function () { return handleMenuClick('CP', 'BillClient'); }, children: "CP_Bill One Business Client for the CURRENT Fiscal Year--3" }), _jsx(NavDropdown.Item, { onClick: function () { return handleMenuClick('RR', 'EnterReceiptNumbers'); }, children: "RR_Enter Receipt Numbers From Accountant General" })] }), _jsxs(NavDropdown, { title: "BOP Reports", id: "basic-nav-dropdown", children: [_jsx(NavDropdown.Item, { onClick: function () { return handleMenuClick('BO', 'BusinessOperatingPermit'); }, children: "BO_Produce Business Operating Permits for all Electoral Areas/Zones" }), _jsx(NavDropdown.Item, { onClick: function () { return handleMenuClick('RM', 'RevenueMobilisationRegister'); }, children: "RM_Produce Business Client Transactions Statement" }), _jsx(NavDropdown.Item, { onClick: function () { return handleMenuClick('LK', 'ListOfPaymentDefaulters'); }, children: "LK_List Of Payment Defaulters" }), _jsx(NavDropdown.Item, { onClick: function () { return handleMenuClick('BO', 'DailyPayments'); }, children: "BO_Produce Daily Payments Report" }), _jsx(NavDropdown.Item, { onClick: function () { return handleMenuClick('ME', 'MonitoringAndEvaluationReport'); }, children: "ME_Produce Collector Monitoring And Evaluation Report" }), _jsx(NavDropdown.Item, { onClick: function () { return handleMenuClick('FZ', 'MiddleLevelManagementReport'); }, children: "FZ_Produce Middle Level Management Report" }), _jsx(NavDropdown.Item, { onClick: function () { return handleMenuClick('BO', 'ExecutiveSummaryReport'); }, children: "BO_Produce Executive Summary Report" })] }), _jsxs(NavDropdown, { title: "BOP Collector Reports", id: "basic-nav-dropdown", children: [_jsx(NavDropdown.Item, { onClick: function () { return handleMenuClick('BN', 'CollectorPerformanceGraph'); }, children: "BN_Produce Collector Performance Graph" }), _jsx(NavDropdown.Item, { onClick: function () { return handleMenuClick('OB', 'ElectoralAreasPaymentsGraph'); }, children: "ZB_Produce Payments for Electoral areas Report-Graph" }), _jsx(NavDropdown.Item, { onClick: function () { return handleMenuClick('OB', 'CompareBudgetActualReport'); }, children: "ZB_Produce Compare Budget to Actual Report-Graph" })] })] }) })] }) }));
};
export default MainMenu;
