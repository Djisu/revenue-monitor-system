export interface OfficerBudgetWeeklyData {
    officer_no: string;
    officer_name: string;
    fiscal_year: number;
    annual_budget: number;
    weekly_budget: number;
    January_budget_WEEK1: number;
    January_budget_WEEK2: number;
    January_budget_WEEK3: number;
    January_budget_WEEK4: number;
    January_Actual_WEEK1: number;
    January_Actual_WEEK2: number;
    January_Actual_WEEK3: number;
    January_Actual_WEEK4: number;
    February_budget_WEEK1: number;
    February_budget_WEEK2: number;
    February_budget_WEEK3: number;
    February_budget_WEEK4: number;
    February_Actual_WEEK1: number;
    February_Actual_WEEK2: number;
    February_Actual_WEEK3: number;
    February_Actual_WEEK4: number;
    March_budget_WEEK1: number;
    March_budget_WEEK2: number;
    March_budget_WEEK3: number;
    March_budget_WEEK4: number;
    March_Actual_WEEK1: number;
    March_Actual_WEEK2: number;
    March_Actual_WEEK3: number;
    March_Actual_WEEK4: number;
    April_budget_WEEK1: number;
    April_budget_WEEK2: number;
    April_budget_WEEK3: number;
    April_budget_WEEK4: number;
    April_Actual_WEEK1: number;
    April_Actual_WEEK2: number;
    April_Actual_WEEK3: number;
    April_Actual_WEEK4: number;
    May_budget_WEEK1: number;
    May_budget_WEEK2: number;
    May_budget_WEEK3: number;
    May_budget_WEEK4: number;
    May_Actual_WEEK1: number;
    May_Actual_WEEK2: number;
    May_Actual_WEEK3: number;
    May_Actual_WEEK4: number;
    June_budget_WEEK1: number;
    June_budget_WEEK2: number;
    June_budget_WEEK3: number;
    June_budget_WEEK4: number;
    June_Actual_WEEK1: number;
    June_Actual_WEEK2: number;
    June_Actual_WEEK3: number;
    June_Actual_WEEK4: number;
    July_budget_WEEK1: number;
    July_budget_WEEK2: number;
    July_budget_WEEK3: number;
    July_budget_WEEK4: number;
    July_Actual_WEEK1: number;
    July_Actual_WEEK2: number;
    July_Actual_WEEK3: number;
    July_Actual_WEEK4: number;
    August_budget_WEEK1: number;
    August_budget_WEEK2: number;
    August_budget_WEEK3: number;
    August_budget_WEEK4: number;
    August_Actual_WEEK1: number;
    August_Actual_WEEK2: number;
    August_Actual_WEEK3: number;
    August_Actual_WEEK4: number;
    September_budget_WEEK1: number;
    September_budget_WEEK2: number;
    September_budget_WEEK3: number;
    September_budget_WEEK4: number;
    September_Actual_WEEK1: number;
    September_Actual_WEEK2: number;
    September_Actual_WEEK3: number;
    September_Actual_WEEK4: number;
    October_budget_WEEK1: number;
    October_budget_WEEK2: number;
    October_budget_WEEK3: number;
    October_budget_WEEK4: number;
    October_Actual_WEEK1: number;
    October_Actual_WEEK2: number;
    October_Actual_WEEK3: number;
    October_Actual_WEEK4: number;
    November_budget_WEEK1: number;
    November_budget_WEEK2: number;
    November_budget_WEEK3: number;
    November_budget_WEEK4: number;
    November_Actual_WEEK1: number;
    November_Actual_WEEK2: number;
    November_Actual_WEEK3: number;
    November_Actual_WEEK4: number;
    December_budget_WEEK1: number;
    December_budget_WEEK2: number;
    December_budget_WEEK3: number;
    December_budget_WEEK4: number;
    December_Actual_WEEK1: number;
    December_Actual_WEEK2: number;
    December_Actual_WEEK3: number;
    December_Actual_WEEK4: number;
    Actual_total: number;
    outstanding: number;
    electoral_area: string;
}
export interface OfficerBudgetWeeklyState {
    budgets: OfficerBudgetWeeklyData[];
    loading: boolean;
    error: string | null;
}
export declare const initialState: OfficerBudgetWeeklyState;
export declare const fetchOfficerBudgetWeeklies: import("@reduxjs/toolkit").AsyncThunk<any, void, {
    state?: unknown;
    dispatch?: import("redux-thunk").ThunkDispatch<unknown, unknown, import("redux").UnknownAction>;
    extra?: unknown;
    rejectValue?: unknown;
    serializedErrorType?: unknown;
    pendingMeta?: unknown;
    fulfilledMeta?: unknown;
    rejectedMeta?: unknown;
}>;
export declare const createOfficerBudgetWeekly: import("@reduxjs/toolkit").AsyncThunk<any, OfficerBudgetWeeklyData, {
    state?: unknown;
    dispatch?: import("redux-thunk").ThunkDispatch<unknown, unknown, import("redux").UnknownAction>;
    extra?: unknown;
    rejectValue?: unknown;
    serializedErrorType?: unknown;
    pendingMeta?: unknown;
    fulfilledMeta?: unknown;
    rejectedMeta?: unknown;
}>;
export declare const fetchOfficerBudgetWeeklyById: import("@reduxjs/toolkit").AsyncThunk<any, {
    id: string;
    fiscal_year: number;
}, {
    state?: unknown;
    dispatch?: import("redux-thunk").ThunkDispatch<unknown, unknown, import("redux").UnknownAction>;
    extra?: unknown;
    rejectValue?: unknown;
    serializedErrorType?: unknown;
    pendingMeta?: unknown;
    fulfilledMeta?: unknown;
    rejectedMeta?: unknown;
}>;
export declare const updateOfficerBudgetWeekly: import("@reduxjs/toolkit").AsyncThunk<any, {
    id: string;
    fiscal_year: number;
    data: OfficerBudgetWeeklyData;
}, {
    state?: unknown;
    dispatch?: import("redux-thunk").ThunkDispatch<unknown, unknown, import("redux").UnknownAction>;
    extra?: unknown;
    rejectValue?: unknown;
    serializedErrorType?: unknown;
    pendingMeta?: unknown;
    fulfilledMeta?: unknown;
    rejectedMeta?: unknown;
}>;
export declare const deleteOfficerBudgetWeekly: import("@reduxjs/toolkit").AsyncThunk<any, {
    id: string;
    fiscal_year: number;
}, {
    state?: unknown;
    dispatch?: import("redux-thunk").ThunkDispatch<unknown, unknown, import("redux").UnknownAction>;
    extra?: unknown;
    rejectValue?: unknown;
    serializedErrorType?: unknown;
    pendingMeta?: unknown;
    fulfilledMeta?: unknown;
    rejectedMeta?: unknown;
}>;
declare const _default: import("redux").Reducer<OfficerBudgetWeeklyState>;
export default _default;
